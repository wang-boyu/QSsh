language: cpp
dist: trusty
sudo: required
cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.6.2
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.7.1
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.8.1
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.9.1
    - ${TRAVIS_BUILD_DIR}/deps/llvm-4.0.0
matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true
  include:
    - os: osx
      osx_image: xcode6.4
    - os: osx
      osx_image: xcode7.3
    - os: osx
      osx_image: xcode8
    - os: osx
      osx_image: xcode8.3
    - os: linux
      env: COMPILER=g++-4.8
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.8']
    - os: linux
      env: COMPILER=g++-4.9
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9']
    - os: linux
      env: COMPILER=g++-5
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5']
    - os: linux
      env: COMPILER=g++-6
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6']
    - os: linux
      env: LLVM_VERSION=3.6.2
      compiler: clang
    - os: linux
      env: LLVM_VERSION=3.7.1
      compiler: clang
    - os: linux
      env: LLVM_VERSION=3.8.1
      compiler: clang
    - os: linux
      env: COMPILER=clang++ LLVM_VERSION=3.9.1
      compiler: gcc
    - os: linux
      env: COMPILER=clang++ LLVM_VERSION=4.0.0
      compiler: gcc
install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      CMAKE_URL="https://www.cmake.org/files/v3.8/cmake-3.8.1-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake 
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      sudo add-apt-repository -y ppa:beineri/opt-qt532-trusty
      sudo apt-get -qq update
      sudo apt-get install -qq qt53declarative
      export CMAKE_PREFIX_PATH="/opt/qt53"
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew upgrade cmake || brew install cmake || exit 1
      brew upgrade qt5   || brew install qt5   || exit 1
      export CMAKE_PREFIX_PATH=$(brew --prefix qt5)
    fi
  - |
    if [[ "${LLVM_VERSION}" != "" ]]; then
      LLVM_DIR=${DEPS_DIR}/llvm-${LLVM_VERSION}
      if [[ -z "$(ls -A ${LLVM_DIR})" ]]; then
        LLVM_URL="http://releases.llvm.org/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://releases.llvm.org/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://releases.llvm.org/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
        CLANG_URL="http://releases.llvm.org/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
        mkdir -p ${LLVM_DIR} ${LLVM_DIR}/build ${LLVM_DIR}/projects/libcxx ${LLVM_DIR}/projects/libcxxabi ${LLVM_DIR}/clang
        travis_retry wget --quiet -O - ${LLVM_URL}      | tar --strip-components=1 -xJ -C ${LLVM_DIR}
        travis_retry wget --quiet -O - ${LIBCXX_URL}    | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxx
        travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxxabi
        travis_retry wget --quiet -O - ${CLANG_URL}     | tar --strip-components=1 -xJ -C ${LLVM_DIR}/clang
        (cd ${LLVM_DIR}/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_DIR}/install -DCMAKE_CXX_COMPILER=g++)
        (cd ${LLVM_DIR}/build/projects/libcxx && make install -j4)
        (cd ${LLVM_DIR}/build/projects/libcxxabi && make install -j4)
      fi
      export CXXFLAGS="-nostdinc++ -isystem ${LLVM_DIR}/install/include/c++/v1"
      export LDFLAGS="-L ${LLVM_DIR}/install/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_DIR}/install/lib"
      export PATH="${LLVM_DIR}/clang/bin:${PATH}"
    fi
before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -H. -Bbuild 
script:
  - cmake --build build -- -j4
branches:
  only:
    - master
notifications:
  email: false
env:
  global:
    - LANG="en_US.UTF-8"
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true 
